[{"/Users/ladyjane/Desktop/script/myapp/debate/src/index.js":"1","/Users/ladyjane/Desktop/script/myapp/debate/src/App.js":"2","/Users/ladyjane/Desktop/script/myapp/debate/src/reportWebVitals.js":"3","/Users/ladyjane/Desktop/script/myapp/debate/src/components/About.js":"4","/Users/ladyjane/Desktop/script/myapp/debate/src/components/TopBar.js":"5","/Users/ladyjane/Desktop/script/myapp/debate/src/components/Topic.js":"6","/Users/ladyjane/Desktop/script/myapp/debate/src/components/Advanced.js":"7"},{"size":500,"mtime":1608881917982,"results":"8","hashOfConfig":"9"},{"size":1090,"mtime":1610486353252,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608881917983,"results":"11","hashOfConfig":"9"},{"size":4023,"mtime":1609988893260,"results":"12","hashOfConfig":"9"},{"size":3395,"mtime":1610486932569,"results":"13","hashOfConfig":"9"},{"size":2368,"mtime":1610488361134,"results":"14","hashOfConfig":"9"},{"size":10904,"mtime":1610496212736,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ha2c3w",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"18"},"/Users/ladyjane/Desktop/script/myapp/debate/src/index.js",[],["37","38"],"/Users/ladyjane/Desktop/script/myapp/debate/src/App.js",["39"],"import logo from './logo.svg';\nimport './App.css';\nimport {\n  HashRouter, Route, \n} from 'react-router-dom';\nimport { Paper } from '@material-ui/core';\nimport React from \"react\";\n\n\n\nimport About from './components/About';\nimport Advanced from './components/Advanced';\nimport TopBar from './components/TopBar';\nimport Topic from './components/Topic';\n\n\n\n\n\nfunction App(props) {\n\n  return (\n    <HashRouter>  \n      <div className = \"page\"> \n        <div style= {{backgroundColor: \"black\"}} className = \"app_container\">\n        <Paper style= {{background: 'linear-gradient(188deg, rgba(99,183,245,1) 66%, rgba(251,251,251,1) 66%)', height: \"100vh\", overflow: \"auto\"}}className = \"paper_container\">\n        <TopBar/>\n    \n        <Route path = \"/advanced\">       \n        <Advanced />\n        </Route>\n    \n        <Route path= \"/about\">\n          <About/>\n        </Route>\n    \n        <Route exact path = \"/\">\n          <Topic/>\n        </Route>\n              \n    \n              \n        </Paper>\n    \n          \n        </div>\n      </div>\n\n    </HashRouter>\n\n\n  );\n}\n\nexport default App;\n","/Users/ladyjane/Desktop/script/myapp/debate/src/reportWebVitals.js",[],"/Users/ladyjane/Desktop/script/myapp/debate/src/components/About.js",["40","41"],"import React from \"react\";\nimport {Paper}  from '@material-ui/core';\nimport './About.css';\nimport axios from 'axios';\n\nclass About extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t\n\t\n\n\t\n\trender() {\n\t\tconsole.log(\"random print\");\n\t\treturn (\n<div className = \"container\">\n\t<p><Paper variant=\"outlined\" square className = \"paper\" elevation = {4}>\n\t<h1> ABOUT THIS PAGE </h1>\n\t<div className = \"text\">\n\n\t<h2> Motivations</h2>\n\t\tThis is a quick little tool that can be used to create debate topics used for practice rounds. I strongly believe that\n\t\tdebate topics serve as a pedagogical tool. The topics we debate inform the research students will do and thus, it is important\n\t\tto me to choose topics which I believe is important for students to have education on. As a coach, however, I often struggled coming up with \n\t\tdebate topics for my students to practice with. A huge problem is that of \"epistemic blindspots\". In essence, we don't know what we don't know. \n\t\tWhat occured was that because I have to know about a topic in order to give students a topic, I tend to give my students\n\t\ttopics I am already familiar with. This cycle became reinforced as certain subjects were never debate on. \n\t\t<br/>\n\t\t<br/>\n\t\tThis lead to my interest trying to create a tool that can select topics from all sorts of different topic areas. \n\t\tThe idea is that this would help fill in for epistemic blindspots as well as providing\n\t\ta way to conveniently and quickly select topics. \n\n\t\t<h2> Methodology </h2>\n\t\tI ran a webscraping script on govtrack.us to parse through every single bill and resolution\n\t\tthat were introduced in the 116th Congress, which runs from 1/3/2019 to 1/3/2021. \n\n\t\tI ultimately settled on using this as my dataset for a few reasons. \n\t\t<br/>\n\t\t<p className = \"tab\">\n\t\t1. Government: Parli is largely centered around governmental policy and policy action, so bills and resolutions from Congress would be relevant to the goals of parli. \n\t\t</p>\n\t\t<p className = \"tab\">\n\t\t2. Topic literature: As these bills are introduced in Congress, there should at least be some grounds for topic literature. \n\t\tAdditionally, looking at past topics used in tournaments can run the risk of topics being outdated. By using\n\t\tthe 116th congress, and limiting it to strictly bills that have not been passed, most topics should not be outdated.\n\t\t</p>\n\t\t<p className = \"tab\"> \n\t\t3. Convenience: the bill names are reasonably descriptive and parsing out the bill names to display as the resolution text can\n\t\tprovide a reasonably worded topic.\n\t\t</p>\n\t\t<p className = \"tab\">\t\n\t\t4. Subject areas: govinfo provides tags for associated topic areas for each bill and by scraping these tags, \n\t\tI can create a dataset in which it allows for filtering by topic areas, to allow for more convenient usage. </p>\n\n\t\t<p className = \"tab\">\t\t\n\t\t5. Debatebility:\n\t\t\tA debate can only occur when there is reasonable ground for both sides. To note is that a lot of the bills\n\t\t\tand resolutions in my dataset are not necessarily great in terms of ground; however, a great majority\n\t\t\tof them are(due to the political nature of Congress), so when randomly selecting for a topic, it is likely that the topic will be debateable.\n\t\t </p>\n\n\n\t\t<h2> Moving forward </h2>\n\t\tThis obviously is not a perfect solution to epistemological blindspot, as there are many issues beyond what is\n\t\tintroduced in Congress which are relevant. Therefore, in the future, I hope to include ways of collecting data from \n\t\tnews articles from different news media outlet and think tanks to generate topics.\n\t\t<br/>\n\t\t<br/>\n\t\tAdditionally, there could be further work done on improving the relevancy of topics and ensuring that the \n\t\ttopics have ground on both side. I hope to include ways for this in the future as well. \n\t\t<br/>\n\t\t<br/>\n\t\tIf you would like to have my original dataset of topics, containing some 14,000 different topics, feel free to \n\t\tcontact me at shirleych@gmail.com\n\t\t\n\t\t</div>\n \t</Paper></p>\n\n \t</div>\n\t\t);\n\t}\n\n}\nexport default About;","/Users/ladyjane/Desktop/script/myapp/debate/src/components/TopBar.js",["42","43","44","45"],"import React from \"react\";\nimport {\n    Button, AppBar, Toolbar, Typography, IconButton, ClickAwayListener, Menu, MenuItem, MenuList, Popover\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './TopBar.css'\nimport { createMuiTheme, withStyles, ThemeProvider } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(5),\n    }, toolBar: {\n      background: '#63b7f5',\n      minHeight: 12,\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(0),\n    },\n    homeButton: {\n      marginLeft: theme.spacing(2),\n    }, bar: {\n        minHeight: 5\n    },\n    title: {\n      fontWeight: 'bold',\n      flexGrow: 1,\n      marginLeft: theme.spacing(0),\n      fontFamily: [\n        'Cambria', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', 'Arial', 'sans-serif',\n      ].join(','),\n      textDecoration: \"underline\",\n      textDecorationColor: \"#b1a7a6\",\n      textDecorationThickness: '5px'\n    },\n  }));\n\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        'Cambria', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', 'Arial', 'sans-serif',\n      ].join(','),\n    }\n  });\n\nexport default function TopBar() {\n    const classes = useStyles();\n\n    return (\n      <ThemeProvider theme={theme}>\n\n        <div className={classes.root}>\n        <AppBar position=\"static\" className = {classes.toolBar} style = {{color: \"#161a1d\", boxShadow: \"0px 0px 0px 0px\" }}>\n          <Toolbar variant = \"dense\" className = {classes.bar}>\n            <IconButton className={classes.homeButton} edge=\"start\">\n            <a href = \"/\" >\n                    <HomeIcon  style = {{fill: \"#a4161a\"}} />\n                </a>\n            </IconButton>\n            <Typography className={classes.title} variant=\"h5\" >\n                debate topics\n            </Typography>\n            <div className = \"menu_container\">\n            <PopupState  className = \"menu_select\" variant=\"popover\" popupId=\"demo-popup-menu\">\n                    {(popupState) => (\n                        <React.Fragment>\n                        <Button className={classes.menuButton} style = {{backgroundColor: \"#a4161a\", color : \"white\", fontSize: '15px'}}variant=\"contained\" {...bindTrigger(popupState)}>\n                            MENU <MenuIcon  style = {{fill: \"white\"}}/>\n                        </Button>\n                        <Menu  {...bindMenu(popupState)}>\n                            <a href = \"#/\" style = {{color: \"black\"}}>  <MenuItem onClick={popupState.close}>Simple Topic Selector</MenuItem></a>\n                            <a href = \"#/advanced\" style = {{color: \"black\"}}>  <MenuItem onClick={popupState.close}>Advanced Topic Selector</MenuItem></a>\n                            <a href = \"#/about\" style = {{color: \"black\"}}> <MenuItem onClick={popupState.close}>About this Page</MenuItem>\n                        </a>\n                        </Menu>\n                        </React.Fragment>\n                    )}\n                </PopupState>\n            </div>\n\n          </Toolbar>\n        </AppBar>\n      </div>\n      </ThemeProvider>\n\n    );\n}\n","/Users/ladyjane/Desktop/script/myapp/debate/src/components/Topic.js",["46","47"],"import React, { useEffect } from \"react\";\nimport './Topic.css'\nimport Collapsible from 'react-collapsible';\n\nimport axios from 'axios';\nimport { useState} from 'react';\n\n\nexport default function Topic() {\n    const [state, setResolution] = useState({\n        resolution: '',\n    });\n    \n    useEffect(() => {\n        axios.post('/query').then(response => \n            {\n                console.log(response.request.response);\n                const result = response.request.response;\n                const temp_result = result.slice(2, -2);\n                const values = JSON.parse(temp_result)\n                const temp = values.string_field_0.replaceAll(\"|\", \",\");\n                const index = temp.indexOf(', and for other purposes.')\n                let res = temp;\n                console.log(res);\n                if(index != -1) {\n                   res = temp.substring(0, index) + '.'\n                }\n                setResolution({...state, resolution: res});\n            }).catch(function(error) {\n                console.log(error);\n            });\n\n    }, [])\n\n    return (\n        <div className = \"cont\">\n            <div className = \"topic\">\n                {state.resolution}\n            </div>\n\n            <Collapsible trigger=\"Questions? \" transitionTime = {100}>\n\n            <div className = \"instructions\">\n\n            Why is the wording of my topic so funny? \n            Why is the topic skewed towards one side?\n            <br/>\n            <br/>\n            Topics are randomly selected  from bills introduced in to Congress. A good majority of these topics\n            have reasonable ground, but there are many others that are not. \n            I did not curate through every bill. If the topic is not debateable, refresh the page to get a new topic.\n            I recommend using these topics as inspiration to create your own topics, as opposed to taking these topics verbatim.\n            Some will probably not be grammatically correct and some will be overly specific. Use your own discretion.\n            <br/>\n            <br/>\n            Want to have more options in selecting topics? Such as choosing topic areas and number of topics?\n            Go to menu and choose the Advanced Topic Selector. \n            <br/>\n            </div>\n\n                \n            </Collapsible>\n\n\n        </div>\n         );\n    }\n    \n",["48","49"],"/Users/ladyjane/Desktop/script/myapp/debate/src/components/Advanced.js",["50","51","52","53","54","55"],"import React from \"react\";\nimport './Advanced.css';\nimport Collapsible from 'react-collapsible';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n Typography\n} from '@material-ui/core';\nimport { createMuiTheme, withStyles, ThemeProvider } from '@material-ui/core/styles';\n\n\nimport axios from 'axios';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n \nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Cambria', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', 'Arial', 'sans-serif',\n    ].join(','),\n  }\n});\n\nexport default function About() {\n  const classes = useStyles();\n  const [age, setAge] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n\n  const handleChange1 = (event) => {\n    setAge(event.target.value);\n    setState({...state, num: event.target.value});\n\n  };\n\n  const handleClose = (event) => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n    const [state, setState] = React.useState({\n        checked_1: false,\n        checked_2: false,\n        checked_3: false,\n        checked_4: false,\n        checked_5: false,\n        checked_6: false,\n        checked_7: false,\n        checked_8: false,\n        checked_9: false,\n        checked_10: false,\n        checked_11: false,\n        checked_12: false,\n        checked_13: false,\n        checked_14: false,\n        checked_15: false,\n        checked_16: false, \n        checked_17: false, \n        checked_18: false,\n        checked_19: false,\n        checked_20: false,\n        checked_21: false,\n        checked_22: false,\n        checked_23: false,\n        checked_24: false,\n        checked_25: false,\n        checked_26: false,\n        checked_27: false,\n        checked_28: false,\n        checked_29: false,\n        checked_30: false,\n        checked_31: false,\n        checked_32: false,\n        checked_33: false,\n        resolution: '',\n        link: '',\n        num: 1,\n      });\n    \n\n      const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n      };\n\n      let topics = [\"Agriculture and Food\", \"Animals\", \"Armed Forces and National Security\", \"Arts, Culture, Religion\", \n      \"Civil Rights and Liberties, Minority Issues\", \"Commerce\", \"Crime and Law Enforcement\", \"Economics and Public Finance\", \"Education\", \"Emergency Management\", \"Energy\",\n      \"Environmental Protection\", \"Families\", \"Finance and Financial Sector\", \"Foreign Trade and International Finance\", \"Geographic Areas, Entities, and Committees\",\n      \"Government Operations and Politics\", \"Health\", \"Housing and Community Devlepment\", \"Immigration\", \"International Affairs\", \"Labor and Employment\", \n      \"Law\", \"Native Americans\", \"Private Legislation\", \"Public Lands and Natural Resources\", \" Science, Technology, Communications\", \"Social Sciences and History\", \"Social Welfare\",\n      \"Sports and Recreation\", \"Traxation\", \"Transportation and Public Works\", \"Water Resources Development\"]\n      \n      const handleClick = (event) => {\n        let topics = [\"Agriculture and Food\", \"Animals\", \"Armed Forces and National Security\", \"Arts, Culture, Religion\", \n        \"Civil Rights and Liberties, Minority Issues\", \"Commerce\", \"Crime and Law Enforcement\", \"Economics and Public Finance\", \"Education\", \"Emergency Management\", \"Energy\",\n        \"Environmental Protection\", \"Families\", \"Finance and Financial Sector\", \"Foreign Trade and International Finance\", \"Geographic Areas, Entities, and Committees\",\n        \"Government Operations and Politics\", \"Health\", \"Housing and Community Devlepment\", \"Immigration\", \"International Affairs\", \"Labor and Employment\", \n        \"Law\", \"Native Americans\", \"Private Legislation\", \"Public Lands and Natural Resources\", \" Science, Technology, Communications\", \"Social Sciences and History\", \"Social Welfare\",\n        \"Sports and Recreation\", \"Traxation\", \"Transportation and Public Works\", \"Water Resources Development\"]\n        \n        let selected = [];\n        let counter = 0;\n        for(const property in state) {\n          if(state[property] == true) {\n            selected.push(topics[counter]);\n          }\n          counter++;\n        }\n        let params = {\n          topic_areas: selected,\n          num: state.num\n        }\n        console.log(state.num)\n\n        console.log(selected);\n        axios.post('/query', params).then(response => {\n          const result = response.request.response;\n          const temp_result = result.slice(2, -2);\n          console.log(result)\n          const values = JSON.parse(temp_result)\n          const temp = values.string_field_0.replaceAll(\"|\", \",\");\n          const index = temp.indexOf(', and for other purposes.')\n          let res = temp;\n          console.log(res);\n          if(index != -1) {\n             res = temp.substring(0, index) + '.'\n          }\n          const found_link = values.string_field_1;\n          setState({\n              ...state, resolution: res, link: found_link});\n        }).catch(function(error) {\n          console.log(error);\n        });\n      };\n      let area_1 = topics.splice(0, 11);\n      let states_1 = [state.checked_1, state.checked_2, state.checked_3, state.checked_4, state.checked_5, state.checked_6, \n        state.checked_7, state.checked_8, state.checked_9, state.checked_10, state.checked_11]\n        let names_1 = [\"checked_1\", \"checked_2\", \"checked_3\", \"checked_4\", \"checked_5\", \"checked_6\", \"checked_7\", \"checked_8\", \"checked_9\", \"checked_10\", \"checked_11\"]\n      let col_1 = []\n      for(var i = 0; i < 11; i++) {\n        col_1.push (\n            <FormControlLabel\n            control={<Checkbox checked={states_1[i]} size = \"small\" onChange={handleChange} name={names_1[i]} color = \"primary\" />}\n            label={<Typography variant = \"body2\">{area_1[i]}</Typography>}\n        />)\n      }\n      \n      let area_2 = topics.splice(0, 11);\n      let states_2 = [state.checked_12, state.checked_13, state.checked_14, state.checked_15, state.checked_16, state.checked_17, \n        state.checked_18, state.checked_19, state.checked_20, state.checked_21, state.checked_22]\n        let names_2 = [\"checked_12\", \"checked_13\", \"checked_14\", \"checked_15\", \"checked_16\", \"checked_17\", \"checked_18\", \"checked_19\", \"checked_20\", \"checked_21\", \"checked_22\"]\n      let col_2 = []\n      for(var i = 0; i < 11; i++) {\n        col_2.push (\n            <FormControlLabel\n            control={<Checkbox checked={states_2[i]} size = \"small\" onChange={handleChange} name={names_2[i]} color = \"primary\" />}\n            label={<Typography variant = \"body2\">{area_2[i]}</Typography>}\n        />)\n      }\n\n      let area_3 = topics.splice(0, 11);\n      let states_3 = [state.checked_23, state.checked_24, state.checked_25, state.checked_26, state.checked_27, state.checked_28,\n        state.checked_29, state.checked_30, state.checked_31, state.checked_32, state.checked_33]\n        let names_3 = [\"checked_23\", \"checked_24\", \"checked_25\", \"checked_26\", \"checked_27\", \"checked_28\", \"checked_29\", \"checked_30\", \"checked_31\", \"checked_32\", \"checked_33\"]\n      let col_3 = []\n      for(var i = 0; i < 11; i++) {\n        col_3.push (\n            <FormControlLabel\n            control={<Checkbox checked={states_3[i]} size = \"small\" onChange={handleChange} name={names_3[i]} color = \"primary\" />}\n            label={<Typography variant = \"body2\">{area_3[i]}</Typography>}\n        />)\n      }\n      \n      let link_text = ''\n      if(state.resolution != '') {\n          link_text =  <div>\n            Visit <a href = {state.link}>{state.link} </a> to see the entire bill text.\n            </div>\n\n      }\n\n    return (\n      <ThemeProvider theme={theme}>\n\n      <div className = \"select\">\n          <Collapsible trigger= \"Select Topic Area +\" transitionTime = {100}> \n              <p className = \"header\">Choose the topic area(s) you would like a resolution to be randomly chosen from. If no topics are chosen, by default,\n                      a resolution will be selected from all possible topic areas. \n                    \n                </p>\n              <div className = \"choices\">\n              <FormGroup column className = \"col\">\n                  {col_1}\n              </FormGroup>\n              <FormGroup column className = \"mid\">\n                  {col_2}\n              </FormGroup>\n              <FormGroup column className = \"right\">\n                  {col_3}\n              </FormGroup>\n              <p className = \"note\">\n                    *Note that filters applied act as a union relationship, as opposed to intersectional. For example, if Health and Energy topic filter is applied, topics will \n                    be randomly from topics that are either Health related or Energy related, as opposed to being Health AND energy related.\n                </p>\n             \n                </div>\n              <div>\n              <div>\n                <p>\n                Select number of topics to be generated\n                </p>\n        <FormControl className={classes.formControl}>\n        <InputLabel      id=\"demo-controlled-open-select-label\">Number</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onChange={handleChange1} \n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={age}\n        >\n          <MenuItem value={1}>1</MenuItem>\n          <MenuItem value={2}>2</MenuItem>\n          <MenuItem value={3}>3</MenuItem>\n          <MenuItem value={4}>4</MenuItem>\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={6}>6</MenuItem>\n          <MenuItem value={7}>7</MenuItem>\n          <MenuItem value={8}>8</MenuItem>\n          <MenuItem value={9}>9</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n\n        </Select>\n      </FormControl>\n      <p className = \"note\"> *if no number of topics is selected, by default one topic will be generated</p>\n\n    </div>\n              </div>\n     \n           </Collapsible>\n      <div className = \"center\"> \n        <button className = \"button\" onClick = {handleClick}> Click here to get a topic</button>\n\n      </div>\n        <div className = \"resolution\"> \n        {state.resolution}\n        <div className = \"link\">\n        {link_text}\n        </div>\n        </div>\n\n        \n\n        </div>\n        </ThemeProvider>\n    );\n}",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":12},{"ruleId":"60","severity":1,"message":"64","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":7,"column":2,"nodeType":"67","messageId":"68","endLine":9,"endColumn":3},{"ruleId":"60","severity":1,"message":"69","line":3,"column":54,"nodeType":"62","messageId":"63","endLine":3,"endColumn":71},{"ruleId":"60","severity":1,"message":"70","line":3,"column":89,"nodeType":"62","messageId":"63","endLine":3,"endColumn":97},{"ruleId":"60","severity":1,"message":"71","line":3,"column":99,"nodeType":"62","messageId":"63","endLine":3,"endColumn":106},{"ruleId":"60","severity":1,"message":"72","line":10,"column":26,"nodeType":"62","messageId":"63","endLine":10,"endColumn":36},{"ruleId":"73","severity":1,"message":"74","line":25,"column":26,"nodeType":"75","messageId":"76","endLine":25,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":33,"column":8,"nodeType":"79","endLine":33,"endColumn":10,"suggestions":"80"},{"ruleId":"56","replacedBy":"81"},{"ruleId":"58","replacedBy":"82"},{"ruleId":"60","severity":1,"message":"72","line":11,"column":26,"nodeType":"62","messageId":"63","endLine":11,"endColumn":36},{"ruleId":"73","severity":1,"message":"83","line":122,"column":30,"nodeType":"75","messageId":"76","endLine":122,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":143,"column":20,"nodeType":"75","messageId":"76","endLine":143,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":171,"column":15,"nodeType":"62","messageId":"86","endLine":171,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":184,"column":15,"nodeType":"62","messageId":"86","endLine":184,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":193,"column":27,"nodeType":"75","messageId":"76","endLine":193,"endColumn":29},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ClickAwayListener' is defined but never used.","'MenuList' is defined but never used.","'Popover' is defined but never used.","'withStyles' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setResolution(s => ...)' if you only need 'state' in the 'setResolution' call.","ArrayExpression",["89"],["87"],["88"],"Expected '===' and instead saw '=='.","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [state]",{"range":"92","text":"93"},[1075,1077],"[state]"]